// Solution 1
import java.util.regex.*;
class Solution1 {
    public boolean solution(String s) {
        return s.matches("^(\\d{4}|\\d{6})$");
    }
}
//        테스트 1 〉	통과 (0.11ms, 67.3MB)
//        테스트 2 〉	통과 (0.09ms, 72.3MB)
//        테스트 3 〉	통과 (0.08ms, 67.6MB)
//        테스트 4 〉	통과 (0.10ms, 70.8MB)
//        테스트 5 〉	통과 (0.10ms, 75.1MB)
//        테스트 6 〉	통과 (0.14ms, 77.6MB)
//        테스트 7 〉	통과 (0.15ms, 78.6MB)
//        테스트 8 〉	통과 (0.10ms, 78.3MB)
//        테스트 9 〉	통과 (0.15ms, 73.4MB)
//        테스트 10 〉	통과 (0.13ms, 85.5MB)
//        테스트 11 〉	통과 (0.11ms, 75.7MB)
//        테스트 12 〉	통과 (0.12ms, 69.4MB)
//        테스트 13 〉	통과 (0.10ms, 76.2MB)
//        테스트 14 〉	통과 (0.10ms, 74.6MB)
//        테스트 15 〉	통과 (0.11ms, 66.7MB)
//        테스트 16 〉	통과 (0.13ms, 71.5MB)
//        테스트 17 〉	통과 (0.14ms, 72.9MB)
//        테스트 18 〉	통과 (0.14ms, 74.3MB)
//        테스트 19 〉	통과 (0.16ms, 78.8MB)
//        테스트 20 〉	통과 (0.11ms, 76.7MB)
//        테스트 21 〉	통과 (0.14ms, 72.2MB)
//        테스트 22 〉	통과 (0.17ms, 85MB)
//        테스트 23 〉	통과 (0.09ms, 74.5MB)
//        테스트 24 〉	통과 (0.11ms, 73.9MB)
//        테스트 25 〉	통과 (0.15ms, 73.8MB)
//        테스트 26 〉	통과 (0.08ms, 69.1MB)
//        테스트 27 〉	통과 (0.15ms, 74.7MB)
//        테스트 28 〉	통과 (0.11ms, 78MB)
//        테스트 29 〉	통과 (0.13ms, 70.3MB)
//        테스트 30 〉	통과 (0.09ms, 74.4MB)

//Solution 2
class Solution2 {
    public boolean solution(String s) {
        if (s.length() != 4 && s.length() != 6) {
            return false;
        }
        for (char c : s.toCharArray()) {
            if (!Character.isDigit(c)) {
                return false;
            }
        }
        return true;
    }
}

//        테스트 1 〉	통과 (0.04ms, 79.5MB)
//        테스트 2 〉	통과 (0.02ms, 78.1MB)
//        테스트 3 〉	통과 (0.05ms, 76.2MB)
//        테스트 4 〉	통과 (0.06ms, 79.1MB)
//        테스트 5 〉	통과 (0.03ms, 74.8MB)
//        테스트 6 〉	통과 (0.03ms, 74.1MB)
//        테스트 7 〉	통과 (0.02ms, 72MB)
//        테스트 8 〉	통과 (0.06ms, 73.6MB)
//        테스트 9 〉	통과 (0.04ms, 78.7MB)
//        테스트 10 〉	통과 (0.03ms, 73.2MB)
//        테스트 11 〉	통과 (0.05ms, 81.3MB)
//        테스트 12 〉	통과 (0.02ms, 81.2MB)
//        테스트 13 〉	통과 (0.02ms, 76.6MB)
//        테스트 14 〉	통과 (0.04ms, 76MB)
//        테스트 15 〉	통과 (0.03ms, 75.9MB)
//        테스트 16 〉	통과 (0.04ms, 74.4MB)
//        테스트 17 〉	통과 (0.06ms, 76.9MB)
//        테스트 18 〉	통과 (0.04ms, 69.5MB)
//        테스트 19 〉	통과 (0.04ms, 73.6MB)
//        테스트 20 〉	통과 (0.06ms, 72.8MB)
//        테스트 21 〉	통과 (0.05ms, 77MB)
//        테스트 22 〉	통과 (0.05ms, 77.5MB)
//        테스트 23 〉	통과 (0.04ms, 73.1MB)
//        테스트 24 〉	통과 (0.04ms, 71.6MB)
//        테스트 25 〉	통과 (0.06ms, 78.7MB)
//        테스트 26 〉	통과 (0.05ms, 84.6MB)
//        테스트 27 〉	통과 (0.06ms, 76.2MB)
//        테스트 28 〉	통과 (0.02ms, 77.7MB)
//        테스트 29 〉	통과 (0.02ms, 78.7MB)
//        테스트 30 〉	통과 (0.04ms, 73.7MB)